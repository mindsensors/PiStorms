#!/usr/bin/env python

# ATTENTION!
# Please do not manually edit the contents of this file
# Only use the web interface for editing
# Otherwise, the file may no longer be editable using the web interface, or you changes may be lost

# Copyright (c) 2016 mindsensors.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#mindsensors.com invests time and resources providing this open source code,
#please support mindsensors.com  by purchasing products from mindsensors.com!
#Learn more product option visit us @  http://www.mindsensors.com

"""
--BLOCKLY FILE--
--START BLOCKS--

dba9e6ff2acb61241c5dd24129e40952deb062b2b3238643e222f6c9b06fb69f
--END BLOCKS--
"""


from PiStorms import PiStorms
import time
import LegoDevices

psm = PiStorms()

nxttouch_BAS1 = LegoDevices.NXTTouchSensor("BAS1")

ev3touch_BAS2 = LegoDevices.EV3TouchSensor("BAS2")

ev3ultrasonic_BBS1 = LegoDevices.EV3UltrasonicSensor("BBS1")


psm.screen.drawDisplay('Sensor Demo', True)
psm.screen.termPrintln('NXT Touch Sensor at BAS1')
psm.screen.termPrintln('EV3 Touch Sensor at BAS2')
psm.screen.termPrintln('EV3 Ultrasonic Sensor at BBS1')
time.sleep(1)

# This section requires two touch sensors. Connect them to Bank 1
# and press one by one to turn LED green. If they are both pressed at
# the same time, the LED will turn purple and the program will stop.
while not (nxttouch_BAS1.isPressed() and ev3touch_BAS2.isPressed()):
  if nxttouch_BAS1.isPressed():
    psm.led(1, 51, 255, 51)
  else:
    psm.led(1, 255, 0, 0)
  if ev3touch_BAS2.isPressed():
    psm.led(2, 51, 255, 51)
  else:
    psm.led(2, 255, 0, 0)
  time.sleep(0.1)
psm.led(1, 102, 0, 204)
psm.led(2, 102, 0, 204)
time.sleep(2)
psm.led(1, 0, 0, 0)
psm.led(2, 0, 0, 0)

# Scans the distance 5 times
psm.screen.termPrintln('Starting distance sensor')
ev3ultrasonic_BBS1.setMode(LegoDevices.PS_SENSOR_MODE_EV3_ULTRASONIC_DIST_IN)
for count in range(5):
  psm.screen.termPrintln((str(ev3ultrasonic_BBS1.getDistance()) + str(' in')))
  time.sleep(1)
