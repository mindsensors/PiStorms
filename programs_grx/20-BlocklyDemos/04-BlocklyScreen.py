#!/usr/bin/env python

# ATTENTION!
# Please do not manually edit the contents of this file
# Only use the web interface for editing
# Otherwise, the file may no longer be editable using the web interface, or you changes may be lost

# Copyright (c) 2017 mindsensors.com
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#mindsensors.com invests time and resources providing this open source code, 
#please support mindsensors.com  by purchasing products from mindsensors.com!
#Learn more product option visit us @  http://www.mindsensors.com

"""
--BLOCKLY FILE--
--START BLOCKS--
PHhtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+PGJsb2NrIHR5cGU9InNjcmVlbl9jbGVhciIgaWQ9InsvViNUWH5lWWpBNGhWMUZ1PzNnIiB4PSIzNSIgeT0iMzciPjxmaWVsZCBuYW1lPSJESVNQTEFZIj5UUlVFPC9maWVsZD48bmV4dD48YmxvY2sgdHlwZT0ic2NyZWVuX2RyYXdyZWN0IiBpZD0iXlsqdHQ1eHJMQ2t6fUw/TzYpdkUiPjxmaWVsZCBuYW1lPSJDT0xPUiI+IzAwNjYwMDwvZmllbGQ+PGZpZWxkIG5hbWU9IkRJU1BMQVkiPlRSVUU8L2ZpZWxkPjxjb21tZW50IHBpbm5lZD0idHJ1ZSIgaD0iNjAiIHc9IjE2NyI+RHJhd3MgYSBncmVlbiByZWN0YW5nbGUgYW5kIHdhaXRzIGZvciAxMCBjbGlja3MuPC9jb21tZW50Pjx2YWx1ZSBuYW1lPSJ4Ij48c2hhZG93IHR5cGU9Im1hdGhfbnVtYmVyIiBpZD0icE9KKmw7NyNwW11AfTFDSi18WHgiPjxmaWVsZCBuYW1lPSJOVU0iPjEwPC9maWVsZD48L3NoYWRvdz48L3ZhbHVlPjx2YWx1ZSBuYW1lPSJ5Ij48c2hhZG93IHR5cGU9Im1hdGhfbnVtYmVyIiBpZD0iSG5+YiFyaVMsaUNJZkM3OStJUHQiPjxmaWVsZCBuYW1lPSJOVU0iPjEwPC9maWVsZD48L3NoYWRvdz48L3ZhbHVlPjx2YWx1ZSBuYW1lPSJ3aWR0aCI+PHNoYWRvdyB0eXBlPSJtYXRoX251bWJlciIgaWQ9IlZeQ1hpek5kKkB1S21RX1RFNjp2Ij48ZmllbGQgbmFtZT0iTlVNIj41MDwvZmllbGQ+PC9zaGFkb3c+PGJsb2NrIHR5cGU9Im1hdGhfYXJpdGhtZXRpYyIgaWQ9Ii5CR1shfVVCLTF+KF5mNlArakZ0Ij48ZmllbGQgbmFtZT0iT1AiPk1JTlVTPC9maWVsZD48dmFsdWUgbmFtZT0iQSI+PHNoYWRvdyB0eXBlPSJtYXRoX251bWJlciIgaWQ9ImVuISlgcWRqTCtuVHBpT0hoSHl1Ij48ZmllbGQgbmFtZT0iTlVNIj4xPC9maWVsZD48L3NoYWRvdz48YmxvY2sgdHlwZT0ic2NyZWVuX2dldHdpZHRoaGVpZ2h0IiBpZD0ibldPbndjRy8lNyVNa1E3QT9FODYiPjxmaWVsZCBuYW1lPSJtb2RlX3NlbGVjdG9yIj5XaWR0aDwvZmllbGQ+PC9ibG9jaz48L3ZhbHVlPjx2YWx1ZSBuYW1lPSJCIj48c2hhZG93IHR5cGU9Im1hdGhfbnVtYmVyIiBpZD0iR2xGbT9MQj9NSFhXP2Bhayt8WX0iPjxmaWVsZCBuYW1lPSJOVU0iPjIwPC9maWVsZD48L3NoYWRvdz48L3ZhbHVlPjwvYmxvY2s+PC92YWx1ZT48dmFsdWUgbmFtZT0iaGVpZ2h0Ij48c2hhZG93IHR5cGU9Im1hdGhfbnVtYmVyIiBpZD0icTBeOkZ9aWJeS3lPXVFTbUktQlYiPjxmaWVsZCBuYW1lPSJOVU0iPjUwPC9maWVsZD48L3NoYWRvdz48YmxvY2sgdHlwZT0ibWF0aF9hcml0aG1ldGljIiBpZD0iWkRgKTZ+SExIZWBEMj1Gaz97UDciPjxmaWVsZCBuYW1lPSJPUCI+TUlOVVM8L2ZpZWxkPjx2YWx1ZSBuYW1lPSJBIj48c2hhZG93IHR5cGU9Im1hdGhfbnVtYmVyIiBpZD0iZW4hKWBxZGpMK25UcGlPSGhIeXUiPjxmaWVsZCBuYW1lPSJOVU0iPjE8L2ZpZWxkPjwvc2hhZG93PjxibG9jayB0eXBlPSJzY3JlZW5fZ2V0d2lkdGhoZWlnaHQiIGlkPSIqXlojc098RmQuRHRNS0w3SHZxcCI+PGZpZWxkIG5hbWU9Im1vZGVfc2VsZWN0b3IiPkhlaWdodDwvZmllbGQ+PC9ibG9jaz48L3ZhbHVlPjx2YWx1ZSBuYW1lPSJCIj48c2hhZG93IHR5cGU9Im1hdGhfbnVtYmVyIiBpZD0iXT94a3N4azV1U007VVhkNGg3aEwiPjxmaWVsZCBuYW1lPSJOVU0iPjIwPC9maWVsZD48L3NoYWRvdz48L3ZhbHVlPjwvYmxvY2s+PC92YWx1ZT48bmV4dD48YmxvY2sgdHlwZT0iY29udHJvbHNfcmVwZWF0X2V4dCIgaWQ9IlRNblJsWitHbEp9VkR5THdKRTFAIj48dmFsdWUgbmFtZT0iVElNRVMiPjxzaGFkb3cgdHlwZT0ibWF0aF9udW1iZXIiIGlkPSJQNEdfQDFyci4xMnllRUU4QkI2WyI+PGZpZWxkIG5hbWU9Ik5VTSI+MTA8L2ZpZWxkPjwvc2hhZG93PjwvdmFsdWU+PHN0YXRlbWVudCBuYW1lPSJETyI+PGJsb2NrIHR5cGU9ImNvbnRyb2xzX3doaWxlVW50aWwiIGlkPSJUTmt2Mj1iLENTWilMYVgqeSE9WSI+PGZpZWxkIG5hbWU9Ik1PREUiPldISUxFPC9maWVsZD48dmFsdWUgbmFtZT0iQk9PTCI+PGJsb2NrIHR5cGU9ImxvZ2ljX25lZ2F0ZSIgaWQ9Ilhdbi47U3Z4dC5PWGxSL295RzJlIj48dmFsdWUgbmFtZT0iQk9PTCI+PGJsb2NrIHR5cGU9InNjcmVlbl9pc3RvdWNoZWQiIGlkPSJqTF5+dGY7VzBffU9TMWB7ZmleYCI+PC9ibG9jaz48L3ZhbHVlPjwvYmxvY2s+PC92YWx1ZT48bmV4dD48YmxvY2sgdHlwZT0ic2NyZWVuX2RyYXdjaXJjbGUiIGlkPSJPRGJOamtBZHpgQiFhZ3tjRUh2ciI+PGZpZWxkIG5hbWU9IkNPTE9SIj4jZmYwMDAwPC9maWVsZD48ZmllbGQgbmFtZT0iRElTUExBWSI+VFJVRTwvZmllbGQ+PHZhbHVlIG5hbWU9IngiPjxzaGFkb3cgdHlwZT0ibWF0aF9udW1iZXIiIGlkPSI3Nng4L20jcyFdK0tbUF00cytkdCI+PGZpZWxkIG5hbWU9Ik5VTSI+MTA8L2ZpZWxkPjwvc2hhZG93PjxibG9jayB0eXBlPSJtYXRoX2FyaXRobWV0aWMiIGlkPSJgc0JKfFYpcXJJNGRIR2cwU05JcSI+PGZpZWxkIG5hbWU9Ik9QIj5NSU5VUzwvZmllbGQ+PHZhbHVlIG5hbWU9IkEiPjxzaGFkb3cgdHlwZT0ibWF0aF9udW1iZXIiIGlkPSJ2UiEhTDhfVD0pLCxSOU4lZUY7WiI+PGZpZWxkIG5hbWU9Ik5VTSI+MTwvZmllbGQ+PC9zaGFkb3c+PGJsb2NrIHR5cGU9InNjcmVlbl9nZXR3aWR0aGhlaWdodCIgaWQ9IkI2Lk1NQTNZbV1gUXtJZWlFNkY9Ij48ZmllbGQgbmFtZT0ibW9kZV9zZWxlY3RvciI+V2lkdGg8L2ZpZWxkPjwvYmxvY2s+PC92YWx1ZT48dmFsdWUgbmFtZT0iQiI+PHNoYWRvdyB0eXBlPSJtYXRoX251bWJlciIgaWQ9IjhZSTRqO0k/UGlUQ2Qtbk1lM0QwIj48ZmllbGQgbmFtZT0iTlVNIj4xPC9maWVsZD48L3NoYWRvdz48YmxvY2sgdHlwZT0ic2NyZWVuX2dldHRvdWNoY29vcmQiIGlkPSJdfWpaZ0VbTEg7ZG5YcFg2fGtLUCI+PGZpZWxkIG5hbWU9Im1vZGVfc2VsZWN0b3IiPlg8L2ZpZWxkPjwvYmxvY2s+PC92YWx1ZT48L2Jsb2NrPjwvdmFsdWU+PHZhbHVlIG5hbWU9InkiPjxzaGFkb3cgdHlwZT0ibWF0aF9udW1iZXIiIGlkPSIjJWcpMTpdeV4/X280SktVSnszaSI+PGZpZWxkIG5hbWU9Ik5VTSI+MTA8L2ZpZWxkPjwvc2hhZG93PjxibG9jayB0eXBlPSJzY3JlZW5fZ2V0dG91Y2hjb29yZCIgaWQ9IiNqKEYqVjVKVWo4M2FFdUpdKFhjIj48ZmllbGQgbmFtZT0ibW9kZV9zZWxlY3RvciI+WTwvZmllbGQ+PC9ibG9jaz48L3ZhbHVlPjx2YWx1ZSBuYW1lPSJyYWRpdXMiPjxzaGFkb3cgdHlwZT0ibWF0aF9udW1iZXIiIGlkPSJYKykoUGxAODk2dEkvN2dMP0osWyI+PGZpZWxkIG5hbWU9Ik5VTSI+NTwvZmllbGQ+PC9zaGFkb3c+PC92YWx1ZT48L2Jsb2NrPjwvbmV4dD48L2Jsb2NrPjwvc3RhdGVtZW50PjxuZXh0PjxibG9jayB0eXBlPSJzeXN0ZW1fc2xlZXAiIGlkPSIvWjhmWHVmQlA5W01iSDk1I35BSiI+PHZhbHVlIG5hbWU9IlRJTUUiPjxzaGFkb3cgdHlwZT0ibWF0aF9udW1iZXIiIGlkPSJHZGFtMCozej92d2A3T3I/SjdIPSI+PGZpZWxkIG5hbWU9Ik5VTSI+MTwvZmllbGQ+PC9zaGFkb3c+PC92YWx1ZT48bmV4dD48YmxvY2sgdHlwZT0ic2NyZWVuX2NsZWFyIiBpZD0iTH5GR35ALltVcGMjW2ItVC9OaTsiPjxmaWVsZCBuYW1lPSJESVNQTEFZIj5UUlVFPC9maWVsZD48L2Jsb2NrPjwvbmV4dD48L2Jsb2NrPjwvbmV4dD48L2Jsb2NrPjwvbmV4dD48L2Jsb2NrPjwvbmV4dD48L2Jsb2NrPjxibG9jayB0eXBlPSJzY3JlZW5fZHJhd3RpdGxlIiBpZD0iO2c7fThGRj1DNjlBSWV3M2l9O2giIHg9IjM3IiB5PSI3NjMiPjxmaWVsZCBuYW1lPSJESVNQTEFZIj5UUlVFPC9maWVsZD48Y29tbWVudCBwaW5uZWQ9InRydWUiIGg9IjYyIiB3PSIxNzkiPlByaW50cyA1IHJhbmRvbSBudW1iZXJzIHRvIHRoZSBzY3JlZW48L2NvbW1lbnQ+PHZhbHVlIG5hbWU9IlRFWFQiPjxzaGFkb3cgdHlwZT0idGV4dCIgaWQ9IkxLQntMTSV4KUotOVp8cjJfWmk7Ij48ZmllbGQgbmFtZT0iVEVYVCI+NSBSYW5kb20gTnVtYmVyczwvZmllbGQ+PC9zaGFkb3c+PC92YWx1ZT48bmV4dD48YmxvY2sgdHlwZT0iY29udHJvbHNfcmVwZWF0X2V4dCIgaWQ9Ijl6ZzBUKE4oV09xe2kuOFksc1NDIj48dmFsdWUgbmFtZT0iVElNRVMiPjxzaGFkb3cgdHlwZT0ibWF0aF9udW1iZXIiIGlkPSIlNVtedmoxLClYa2hFc2k/bykxeiI+PGZpZWxkIG5hbWU9Ik5VTSI+NTwvZmllbGQ+PC9zaGFkb3c+PC92YWx1ZT48c3RhdGVtZW50IG5hbWU9IkRPIj48YmxvY2sgdHlwZT0idGVybWluYWxfcHJpbnRsbiIgaWQ9Ik8pem9DLlMrZSt3YG13blV2KjZPIj48dmFsdWUgbmFtZT0idGV4dCI+PHNoYWRvdyB0eXBlPSJ0ZXh0IiBpZD0iYjNjbjg4cXl9IXtSMTJuK34vOSMiPjxmaWVsZCBuYW1lPSJURVhUIj5IZWxsbyBXb3JsZDwvZmllbGQ+PC9zaGFkb3c+PGJsb2NrIHR5cGU9Im1hdGhfcmFuZG9tX2ludCIgaWQ9Ikg9NF5iMUIoQGN9Z1ldZyhVZW9RIj48dmFsdWUgbmFtZT0iRlJPTSI+PHNoYWRvdyB0eXBlPSJtYXRoX251bWJlciIgaWQ9IjN0b3IlJSktNUdgeSlUMm1jeGR9Ij48ZmllbGQgbmFtZT0iTlVNIj4xPC9maWVsZD48L3NoYWRvdz48L3ZhbHVlPjx2YWx1ZSBuYW1lPSJUTyI+PHNoYWRvdyB0eXBlPSJtYXRoX251bWJlciIgaWQ9IkxQVCNpUWloR286S0VSMnNlX3cwIj48ZmllbGQgbmFtZT0iTlVNIj4xMDA8L2ZpZWxkPjwvc2hhZG93PjwvdmFsdWU+PC9ibG9jaz48L3ZhbHVlPjxuZXh0PjxibG9jayB0eXBlPSJzeXN0ZW1fc2xlZXAiIGlkPSJ1LW0vNi1dOiNTezRDKUdeYyElTSI+PHZhbHVlIG5hbWU9IlRJTUUiPjxzaGFkb3cgdHlwZT0ibWF0aF9udW1iZXIiIGlkPSJETjJoK3FIc1h0d3k9dWNiNlg7KiI+PGZpZWxkIG5hbWU9Ik5VTSI+MTwvZmllbGQ+PC9zaGFkb3c+PC92YWx1ZT48L2Jsb2NrPjwvbmV4dD48L2Jsb2NrPjwvc3RhdGVtZW50PjxuZXh0PjxibG9jayB0eXBlPSJzY3JlZW5fY2xlYXIiIGlkPSJYN0haZ0FtXz11c1d5Z2wuckxSKiI+PGZpZWxkIG5hbWU9IkRJU1BMQVkiPlRSVUU8L2ZpZWxkPjwvYmxvY2s+PC9uZXh0PjwvYmxvY2s+PC9uZXh0PjwvYmxvY2s+PC94bWw+
2c77ec64b51ced51548df5fd76a8661db0d66da32eb23a04f719bd127c38dbb6
--END BLOCKS--
"""


from PiStorms import PiStorms
import time
import random

psm = PiStorms()


psm.screen.clearScreen(True)
# Draws a green rectangle and waits for 10 clicks.
psm.screen.fillRect(10, 10, (psm.screen.screenWidth() - 20), (psm.screen.screenHeight() - 20), (0, 102, 0), display = True)
for count in range(10):
  while not psm.screen.isTouched():
    pass
  psm.screen.fillCircle((psm.screen.screenWidth() - psm.screen.TS_X()), psm.screen.TS_Y(), 5, (255, 0, 0), display = True)
time.sleep(1)
psm.screen.clearScreen(True)

# Prints 5 random numbers to the screen
psm.screen.drawDisplay('5 Random Numbers', True)
for count2 in range(5):
  psm.screen.termPrintln((random.randint(1, 100)))
  time.sleep(1)
psm.screen.clearScreen(True)
